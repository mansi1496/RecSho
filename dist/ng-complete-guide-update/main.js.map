{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.service.ts","./src/app/auth/auth.service.ts","./src/app/auth/store/auth.actions.ts","./src/app/auth/store/auth.effects.ts","./src/app/auth/store/auth.reducer.ts","./src/app/auth/user.model.ts","./src/app/core.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/logging.service.ts","./src/app/recipes/recipe.service.ts","./src/app/recipes/store/recipe.actions.ts","./src/app/recipes/store/recipe.effects.ts","./src/app/recipes/store/recipe.reducer.ts","./src/app/shared/alert/alert.component.ts","./src/app/shared/alert/alert.component.html","./src/app/shared/data-storage.service.ts","./src/app/shared/dropdown.directive.ts","./src/app/shared/ingredient.model.ts","./src/app/shared/loading-spinner/loading-spinner.component.ts","./src/app/shared/placeholder/placeholder.directive.ts","./src/app/shared/shared.module.ts","./src/app/shopping-list/store/shopping-list.actions.ts","./src/app/shopping-list/store/shopping-list.reducer.ts","./src/app/store/app.reducer.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: '/recipes', pathMatch: 'full' },\n  { path: 'recipes', loadChildren: () => import('./recipes/recipes.module').then(m => m.RecipesModule) },\n  {\n    path: 'shopping-list',\n    loadChildren: () => import('./shopping-list/shopping-list.module').then(m => m.ShoppingListModule)\n  },\n  {\n    path: 'auth',\n    loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from './auth/auth.service';\nimport { LoggingService } from './logging.service';\nimport * as fromApp from './store/app.reducer';\nimport * as AuthActions from './auth/store/auth.actions';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    // private authService: AuthService,\n    private store : Store<fromApp.AppState>,\n    private loggingService: LoggingService\n  ) {}\n\n  ngOnInit() {\n    // this.authService.autoLogin();\n    this.store.dispatch(new AuthActions.AutoLogin());\n    this.loggingService.printLog('Hello from AppComponent ngOnInit');\n  }\n}\n","<app-header></app-header>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreRouterConnectingModule} from '@ngrx/router-store';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\nimport { CoreModule } from './core.module';\nimport * as fromApp from './store/app.reducer';\nimport { from } from 'rxjs';\nimport { AuthEffects } from './auth/store/auth.effects';\nimport { environment } from '../environments/environment';\nimport { RecipeEffects } from './recipes/store/recipe.effects';\n\n@NgModule({\n  declarations: [AppComponent, HeaderComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    StoreModule.forRoot(fromApp.appReducer),\n    EffectsModule.forRoot([AuthEffects, RecipeEffects]),\n    StoreDevtoolsModule.instrument({logOnly : environment.production}),\n    StoreRouterConnectingModule.forRoot(),\n    SharedModule,\n    CoreModule\n  ],\n  bootstrap: [AppComponent]\n  // providers: [LoggingService]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpParams\n} from '@angular/common/http';\nimport { take, exhaustMap, map } from 'rxjs/operators';\n\nimport { AuthService } from './auth.service';\nimport { Store } from '@ngrx/store';\nimport * as fromApp from '../store/app.reducer';\n\n@Injectable()\nexport class AuthInterceptorService implements HttpInterceptor {\n  constructor(private authService: AuthService, private store : Store<fromApp.AppState>) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    return this.store.select('auth').pipe(\n      take(1),\n      map(authState =>{\n        return authState.user;\n      }),\n      exhaustMap(user => {\n        if (!user) {\n          return next.handle(req);\n        }\n        const modifiedReq = req.clone({\n          params: new HttpParams().set('auth', user.token)\n        });\n        return next.handle(modifiedReq);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { catchError, tap } from 'rxjs/operators';\nimport { throwError, BehaviorSubject } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as fromApp from '../store/app.reducer';\nimport * as AuthActions from './store/auth.actions';\n\nimport { User } from './user.model';\nimport { Store } from '@ngrx/store';\n\nexport interface AuthResponseData {\n  kind: string;\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n  registered?: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  // user = new BehaviorSubject<User>(null);\n  private tokenExpirationTimer: any;\n\n  constructor(private http: HttpClient, private router: Router, private store : Store<fromApp.AppState>) {}\n\n  // signup(email: string, password: string) {\n  //   return this.http\n  //     .post<AuthResponseData>(\n  //       'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=' + environment.firebaseAPIKey,\n  //       {\n  //         email: email,\n  //         password: password,\n  //         returnSecureToken: true\n  //       }\n  //     )\n  //     .pipe(\n  //       catchError(this.handleError),\n  //       tap(resData => {\n  //         this.handleAuthentication(\n  //           resData.email,\n  //           resData.localId,\n  //           resData.idToken,\n  //           +resData.expiresIn\n  //         );\n  //       })\n  //     );\n  // }\n\n  // login(email: string, password: string) {\n  //   return this.http\n  //     .post<AuthResponseData>(\n  //       'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=' + environment.firebaseAPIKey,\n  //       {\n  //         email: email,\n  //         password: password,\n  //         returnSecureToken: true\n  //       }\n  //     )\n  //     .pipe(\n  //       catchError(this.handleError),\n  //       tap(resData => {\n  //         this.handleAuthentication(\n  //           resData.email,\n  //           resData.localId,\n  //           resData.idToken,\n  //           +resData.expiresIn\n  //         );\n  //       })\n  //     );\n  // }\n\n  // autoLogin() {\n  //   const userData: {\n  //     email: string;\n  //     id: string;\n  //     _token: string;\n  //     _tokenExpirationDate: string;\n  //   } = JSON.parse(localStorage.getItem('userData'));\n  //   if (!userData) {\n  //     return;\n  //   }\n\n  //   const loadedUser = new User(\n  //     userData.email,\n  //     userData.id,\n  //     userData._token,\n  //     new Date(userData._tokenExpirationDate)\n  //   );\n\n  //   if (loadedUser.token) {\n  //     // this.user.next(loadedUser);\n  //     this.store.dispatch(\n  //       new AuthActions.AuthenticateSuccess(\n  //         {\n  //         email : loadedUser.email,\n  //         userId : loadedUser.id,\n  //         token : loadedUser.token,\n  //         expirationDate : new Date(userData._tokenExpirationDate)\n  //         }\n  //         )\n  //       )\n  //     const expirationDuration =\n  //       new Date(userData._tokenExpirationDate).getTime() -\n  //       new Date().getTime();\n  //     this.autoLogout(expirationDuration);\n  //   }\n  // }\n\n  // logout() {\n  //   // this.user.next(null);\n  //   this.store.dispatch(new AuthActions.Logout());\n  //   // this.router.navigate(['/auth']);\n  //   localStorage.removeItem('userData');\n  //   if (this.tokenExpirationTimer) {\n  //     clearTimeout(this.tokenExpirationTimer);\n  //   }\n  //   this.tokenExpirationTimer = null;\n  // }\n\n  setLogOutTimer(expirationDuration: number) {\n    this.tokenExpirationTimer = setTimeout(() => {\n      // this.logout();\n      this.store.dispatch(new AuthActions.Logout());\n    }, expirationDuration);\n  }\n\n  clearLogOutTimer(){\n    if(this.tokenExpirationTimer){\n      clearTimeout(this.tokenExpirationTimer);\n      this.tokenExpirationTimer = null;\n    }\n  }\n\n  // private handleAuthentication(\n  //   email: string,\n  //   userId: string,\n  //   token: string,\n  //   expiresIn: number\n  // ) {\n  //   const expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\n  //    const user = new User(email, userId, token, expirationDate);\n  //   // this.user.next(user);\n  //   this.store.dispatch( new AuthActions.AuthenticateSuccess(\n  //     {\n  //       email: email,\n  //       userId: userId,\n  //       token: token,\n  //       expirationDate : expirationDate\n  //     })\n  //   )\n  //   this.autoLogout(expiresIn * 1000);\n  //   localStorage.setItem('userData', JSON.stringify(user));\n  // }\n\n  // private handleError(errorRes: HttpErrorResponse) {\n  //   let errorMessage = 'An unknown error occurred!';\n  //   if (!errorRes.error || !errorRes.error.error) {\n  //     return throwError(errorMessage);\n  //   }\n  //   switch (errorRes.error.error.message) {\n  //     case 'EMAIL_EXISTS':\n  //       errorMessage = 'This email exists already';\n  //       break;\n  //     case 'EMAIL_NOT_FOUND':\n  //       errorMessage = 'This email does not exist.';\n  //       break;\n  //     case 'INVALID_PASSWORD':\n  //       errorMessage = 'This password is not correct.';\n  //       break;\n  //   }\n  //   return throwError(errorMessage);\n  // }\n}\n","import { Action } from \"@ngrx/store\";\n\nexport const LOGIN_START = '[Auth] Login Start';\nexport const AUTO_LOGIN = '[Auth] Auto Login';\nexport const AUTHENTICATE_SUCCESS = '[Auth] Authenticate Success';\nexport const AUTHENTICATE_FAIL = '[Auth] Authenticate Fail';\nexport const LOGOUT = '[Auth] Logout';\nexport const SIGNUP_START = '[Auth] Signup Start';\nexport const SIGNUP = '[Auth] Signup ';\nexport const CLEAR_ERROR = '[Auth] Clear Error';\n\n\nexport class AuthenticateSuccess implements Action{\n    readonly type = AUTHENTICATE_SUCCESS;\n\n    constructor(public payload : {email : string, userId : string, token : string, expirationDate : Date, redirect : boolean}){}\n}\n\nexport class LoginStart implements Action{\n    readonly type = LOGIN_START;\n\n    constructor(public payload : {email : string, password : string}){}\n}\n\nexport class AuthenticateFail implements Action{\n    readonly type = AUTHENTICATE_FAIL;\n\n    constructor(public payload : string){}\n}\n\nexport class Logout implements Action{\n    readonly type = LOGOUT;\n}\n\nexport class SignupStart implements Action{\n    readonly type = SIGNUP_START;\n\n    constructor(public payload : {email : string, password : string}){}\n}\n\nexport class ClearError implements Action{\n    readonly type = CLEAR_ERROR;\n}\n\nexport class AutoLogin implements Action {\n    readonly type = AUTO_LOGIN;\n\n    constructor(){}\n    \n}\n\nexport type AuthActions = \nAuthenticateSuccess \n| Logout \n| LoginStart \n| AuthenticateFail \n| SignupStart \n| ClearError\n| AutoLogin;","import { Actions, ofType, Effect } from \"@ngrx/effects\";\nimport { switchMap, catchError, map, tap } from 'rxjs/operators';\nimport * as AuthActions from './auth.actions';\nimport { from, of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"../../../environments/environment\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { User } from \"../user.model\";\nimport { AuthService } from \"../auth.service\";\n\nexport interface AuthResponseData {\n    kind: string;\n    idToken: string;\n    email: string;\n    refreshToken: string;\n    expiresIn: string;\n    localId: string;\n    registered?: boolean;\n}\n\nconst handleAuthentication = (email : string, userid : string, token : string, expiresIn : number) =>{\n    const expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\n    const user = new User(email, userid, token, expirationDate);\n    localStorage.setItem('userData', JSON.stringify(user));\n    return new AuthActions.AuthenticateSuccess({\n        email : email,\n        userId : userid,\n        token : token,\n        expirationDate : expirationDate,\n        redirect : true\n    });\n}\n\nconst handleError = (errorRes : any) =>{\n    let errorMessage = 'An unknown error occurred!';\n                if (!errorRes.error || !errorRes.error.error) {\n                return of(new AuthActions.AuthenticateFail(errorMessage));\n                }\n                switch (errorRes.error.error.message) {\n                case 'EMAIL_EXISTS':\n                    errorMessage = 'This email exists already';\n                    break;\n                case 'EMAIL_NOT_FOUND':\n                    errorMessage = 'This email does not exist.';\n                    break;\n                case 'INVALID_PASSWORD':\n                    errorMessage = 'This password is not correct.';\n                    break;\n                }\n                return of(new AuthActions.AuthenticateFail(errorMessage)); //a utility inside rxjs to return observable\n}\n\n  @Injectable()\nexport class AuthEffects{\n\n    @Effect()\n    authSignup = this.actions$.pipe(\n        ofType(AuthActions.SIGNUP_START),\n        switchMap((signUpData : AuthActions.SignupStart) => {\n            return this.http\n                .post<AuthResponseData>(\n                    'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=' + environment.firebaseAPIKey,\n                    {\n                    email: signUpData.payload.email,\n                    password: signUpData.payload.password,\n                    returnSecureToken: true\n                    }\n                ).pipe( \n                    tap(resData =>{\n                        this.authService.setLogOutTimer( +resData.expiresIn * 1000);\n                    }),\n                    map(resData => {\n                        return handleAuthentication(resData.email, resData.localId, resData.idToken, +resData.expiresIn)\n                }),\n                catchError(errorRes =>{\n                    return handleError(errorRes);\n                }))\n        })\n    );\n\n    @Effect()\n    authLogin = this.actions$.pipe(\n        ofType(AuthActions.LOGIN_START),\n        switchMap((authData : AuthActions.LoginStart) => {\n            return this.http\n            .post<AuthResponseData>(\n              'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=' + environment.firebaseAPIKey,\n              {\n                email: authData.payload.email,\n                password: authData.payload.password,\n                returnSecureToken: true\n              }\n            ).pipe( \n                tap(resData =>{\n                    this.authService.setLogOutTimer( +resData.expiresIn * 1000);\n                }),\n                map(resData => {\n                    return handleAuthentication(resData.email, resData.localId, resData.idToken, +resData.expiresIn)\n            }),\n            catchError(errorRes =>{\n                return handleError(errorRes);\n            }))\n        })\n    );\n\n    @Effect()\n    autoLogin = this.actions$.pipe(\n        ofType(AuthActions.AUTO_LOGIN),\n        map(() => {\n            const userData: {\n                email: string;\n                id: string;\n                _token: string;\n                _tokenExpirationDate: string;\n              } = JSON.parse(localStorage.getItem('userData'));\n              if (!userData) {\n                return {type : 'DUMMY'};\n              }\n          \n              const loadedUser = new User(\n                userData.email,\n                userData.id,\n                userData._token,\n                new Date(userData._tokenExpirationDate)\n              );\n          \n              if (loadedUser.token) {\n                // this.user.next(loadedUser);\n                // this.store.dispatch(\n                const expirationDuration =\n                  new Date(userData._tokenExpirationDate).getTime() -\n                  new Date().getTime();\n                this.authService.setLogOutTimer(expirationDuration);\n                return new AuthActions.AuthenticateSuccess(\n                    {\n                    email : loadedUser.email,\n                    userId : loadedUser.id,\n                    token : loadedUser.token,\n                    expirationDate : new Date(userData._tokenExpirationDate),\n                    redirect : false\n                    }\n                    )\n                //   )\n                // const expirationDuration =\n                //   new Date(userData._tokenExpirationDate).getTime() -\n                //   new Date().getTime();\n                // this.autoLogout(expirationDuration);\n              }\n              return {type : 'DUMMY'};\n        })\n    );\n\n    @Effect({dispatch : false})\n    authLogout = this.actions$.pipe(\n        ofType(AuthActions.LOGOUT),\n        tap (() =>{\n            localStorage.removeItem('userData');\n            this.authService.clearLogOutTimer();\n            this.router.navigate(['/auth']);\n        })\n    );\n\n    @Effect({dispatch : false})\n    authRedirect = this.actions$.pipe(\n        ofType(AuthActions.AUTHENTICATE_SUCCESS),\n        tap((authSuccessActions : AuthActions.AuthenticateSuccess) => {\n            if(authSuccessActions.payload.redirect){\n                this.router.navigate(['/']);\n            }\n        })\n    )\n\n    constructor(\n        private actions$ : Actions, \n        private http : HttpClient, \n        private router : Router,\n        private authService : AuthService){\n\n    }\n}","import { User } from '../user.model';\nimport * as AuthActions from './auth.actions';\n\nexport interface State{\n  user : User;\n  authError :string;\n  loading : boolean\n}\n\nconst initialState = {\n  user : null,\n  authError : null,\n  loading : false\n}\n\nexport function authReducer(state = initialState, action : AuthActions.AuthActions){\n  switch(action.type){\n    case AuthActions.AUTHENTICATE_SUCCESS :\n      const user = new User(action.payload.email, action.payload.userId, action.payload.token, action.payload.expirationDate);\n      return {\n        ...state, \n        authError : null, \n        user : user,\n        loading : false\n      };\n    case AuthActions.LOGOUT :\n      return {\n        ...state, \n        user : null,\n        loading : false,\n      };\n    case AuthActions.LOGIN_START :\n    case AuthActions.SIGNUP_START :\n      return{\n        ...state,\n        authError : null,\n        loading : true,\n      }\n    case AuthActions.AUTHENTICATE_FAIL :\n      return{\n        ...state,\n        user : null,\n        loading : false,\n        authError : action.payload,\n      }\n    case AuthActions.CLEAR_ERROR :\n      return{\n        ...state,\n        authError : null\n      }\n    default :\n      return state;\n  }\n}","export class User {\n  constructor(\n    public email: string,\n    public id: string,\n    private _token: string,\n    private _tokenExpirationDate: Date\n  ) {}\n\n  get token() {\n    if (!this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\n      return null;\n    }\n    return this._token;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { RecipeService } from './recipes/recipe.service';\nimport { AuthInterceptorService } from './auth/auth-interceptor.service';\nimport { LoggingService } from './logging.service';\n\n@NgModule({\n  providers: [\n    RecipeService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true\n    }\n  ]\n})\nexport class CoreModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DataStorageService } from '../shared/data-storage.service';\nimport { AuthService } from '../auth/auth.service';\nimport { Store, select } from '@ngrx/store';\nimport * as fromApp from '../store/app.reducer';\nimport { map } from 'rxjs/operators';\nimport * as AuthActions from '../auth/store/auth.actions';\nimport * as RecipeActions from '../recipes/store/recipe.actions';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  isAuthenticated = false;\n  private userSub: Subscription;\n\n  constructor(\n    private dataStorageService: DataStorageService,\n    private authService: AuthService,\n    private store : Store<fromApp.AppState>\n  ) {}\n\n  ngOnInit() {\n    // this.userSub = this.store.select('auth').pipe(\n    //   map(authState => authState.user)\n    // ).subscribe(user => {\n    //   this.isAuthenticated = !!user;\n    //   console.log(!user);\n    //   console.log(!!user);\n    // });\n\n    this.userSub = this.store.select('auth').pipe(\n      map(authState => {\n        return authState.user\n      })\n    ).subscribe(user => {\n      this.isAuthenticated = !!user;\n      console.log(!user);\n      console.log(!!user);\n    });\n  }\n\n  onSaveData() {\n    this.dataStorageService.storeRecipes();\n  }\n\n  onFetchData() {\n    // this.dataStorageService.fetchRecipes().subscribe();\n    this.store.dispatch( new RecipeActions.fetchRecipes());\n  }\n\n  onLogout() {\n    // this.authService.logout();\n    this.store.dispatch(new AuthActions.Logout());\n  }\n\n  ngOnDestroy() {\n    this.userSub.unsubscribe();\n  }\n}\n","<nav class=\"navbar navbar-default\">\n    <div class=\"container-fluid\">\n        <div class=\"navbar-header\">\n            <a routerLink=\"/\" class=\"navbar-brand\">Recipe Book</a>\n        </div>\n\n        <div class=\"collapse navbar-collapse\">\n            <ul class=\"nav navbar-nav\">\n                <li routerLinkActive=\"active\" *ngIf=\"isAuthenticated\">\n                    <a routerLink=\"/recipes\">Recipes</a>\n                </li>\n                <li routerLinkActive=\"active\" *ngIf=\"!isAuthenticated\">\n                    <a routerLink=\"/auth\">Authenticate</a>\n                </li>\n                <li routerLinkActive=\"active\">\n                    <a routerLink=\"/shopping-list\">Shopping List</a>\n                </li>\n            </ul>\n            <ul class=\"nav navbar-nav navbar-right\">\n                <li *ngIf=\"isAuthenticated\">\n                    <a style=\"cursor: pointer;\" (click)=\"onLogout()\">Logout</a>\n                </li>\n                <li class=\"dropdown\" appDropdown *ngIf=\"isAuthenticated\">\n                    <a style=\"cursor: pointer;\" class=\"dropdown-toggle\" role=\"button\">Manage <span class=\"caret\"></span></a>\n                    <ul class=\"dropdown-menu\">\n                        <li>\n                            <a style=\"cursor: pointer;\" (click)=\"onSaveData()\">Save Data</a>\n                        </li>\n                        <li>\n                            <a style=\"cursor: pointer;\" (click)=\"onFetchData()\">Fetch Data</a>\n                        </li>\n                    </ul>\n                </li>\n            </ul>\n        </div>\n    </div>\n</nav>","import { Injectable } from '@angular/core';\n\n// @Injectable({ providedIn: 'root' })\n@Injectable()\nexport class LoggingService {\n  lastlog: string;\n\n  printLog(message: string) {\n    console.log(message);\n    console.log(this.lastlog);\n    this.lastlog = message;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Store } from '@ngrx/store';\n\nimport { Recipe } from './recipe.model';\nimport { Ingredient } from '../shared/ingredient.model';\nimport * as ShoppingListActions from '../shopping-list/store/shopping-list.actions';\nimport * as fromApp from '../store/app.reducer';\n\n@Injectable()\nexport class RecipeService {\n  recipesChanged = new Subject<Recipe[]>();\n\n  // private recipes: Recipe[] = [\n  //   new Recipe(\n  //     'Tasty Schnitzel',\n  //     'A super-tasty Schnitzel - just awesome!',\n  //     'https://upload.wikimedia.org/wikipedia/commons/7/72/Schnitzel.JPG',\n  //     [new Ingredient('Meat', 1), new Ingredient('French Fries', 20)]\n  //   ),\n  //   new Recipe(\n  //     'Big Fat Burger',\n  //     'What else you need to say?',\n  //     'https://upload.wikimedia.org/wikipedia/commons/b/be/Burger_King_Angus_Bacon_%26_Cheese_Steak_Burger.jpg',\n  //     [new Ingredient('Buns', 2), new Ingredient('Meat', 1)]\n  //   )\n  // ];\n  private recipes: Recipe[] = [];\n\n  constructor(\n    private store: Store<fromApp.AppState>\n  ) {}\n\n  setRecipes(recipes: Recipe[]) {\n    this.recipes = recipes;\n    this.recipesChanged.next(this.recipes.slice());\n  }\n\n  getRecipes() {\n    return this.recipes.slice();\n  }\n\n  getRecipe(index: number) {\n    return this.recipes[index];\n  }\n\n  addIngredientsToShoppingList(ingredients: Ingredient[]) {\n    // this.slService.addIngredients(ingredients);\n    this.store.dispatch(new ShoppingListActions.AddIngredients(ingredients));\n  }\n\n  addRecipe(recipe: Recipe) {\n    this.recipes.push(recipe);\n    this.recipesChanged.next(this.recipes.slice());\n  }\n\n  updateRecipe(index: number, newRecipe: Recipe) {\n    this.recipes[index] = newRecipe;\n    this.recipesChanged.next(this.recipes.slice());\n  }\n\n  deleteRecipe(index: number) {\n    this.recipes.splice(index, 1);\n    this.recipesChanged.next(this.recipes.slice());\n  }\n}\n","import { Action } from \"@ngrx/store\";\nimport { Recipe } from \"../recipe.model\";\n\nexport const SET_RECIPES = '[Recipes] Set Recipes';\nexport const FETCH_RECIPES = '[Recipes] Fetch Recipes';\n\nexport class setRecipes implements Action{\n    readonly type = SET_RECIPES;\n\n    constructor(public payload : Recipe[]){}\n}\n\nexport class fetchRecipes implements Action{\n    readonly type = FETCH_RECIPES;\n\n    // constructor(public payload : Recipe[]){}\n}\n\nexport type RecipesAction = setRecipes | fetchRecipes;","import { Actions, Effect, ofType } from '@ngrx/effects';\nimport * as RecipeActions from './recipe.actions';\nimport { switchMap, map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Recipe } from '../recipe.model';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class RecipeEffects{\n\n    @Effect()\n    fetchRecipes = this.actions$.pipe(\n        ofType(RecipeActions.FETCH_RECIPES),\n        switchMap(() => {\n            return this.http.get<Recipe[]>(\n                'https://reccshoo.firebaseio.com/recipes.json'\n            )\n        }),\n        map(recipes => {\n            return recipes.map(recipe => {\n              return {\n                ...recipe,\n                ingredients: recipe.ingredients ? recipe.ingredients : []\n              };\n            });\n        }),\n        map(recipes =>{\n            return new RecipeActions.setRecipes(recipes);\n        })\n    );\n\n    constructor(private actions$ : Actions, private http : HttpClient){}\n}","import { Recipe } from \"../recipe.model\";\nimport * as RecipeActions from './recipe.actions';\nimport { switchMap } from \"rxjs/operators\";\n\nexport interface State{\n    recipes : Recipe[];\n}\n\nconst intialState : State = {\n    recipes : [],\n}\n\nexport function recipeReducer(state = intialState, action : RecipeActions.RecipesAction){\n    switch(action.type){\n        case RecipeActions.SET_RECIPES :\n            return {\n                ...state,\n                recipes : [...action.payload],\n            }\n        default :\n            return state;\n    }\n}","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent {\n  @Input() message: string;\n  @Output() close = new EventEmitter<void>();\n\n  onClose() {\n    this.close.emit();\n  }\n}\n","<div class=\"backdrop\" (click)=\"onClose()\"></div>\n<div class=\"alert-box\">\n  <p>{{ message }}</p>\n  <div class=\"alert-box-actions\">\n    <button class=\"btn btn-primary\" (click)=\"onClose()\">Close</button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { map, tap, take, exhaustMap } from 'rxjs/operators';\n\nimport { Recipe } from '../recipes/recipe.model';\nimport { RecipeService } from '../recipes/recipe.service';\n// import { AuthService } from '../auth/auth.service';\nimport * as fromApp from '../store/app.reducer';\nimport * as RecipesActions from '../recipes/store/recipe.actions';\nimport { Store } from '@ngrx/store';\n\n\n@Injectable({ providedIn: 'root' })\nexport class DataStorageService {\n  constructor(\n    private http: HttpClient,\n    private recipeService: RecipeService,\n    // private authService: AuthService\n    private store : Store<fromApp.AppState>\n  ) {}\n\n  storeRecipes() {\n    const recipes = this.recipeService.getRecipes();\n    this.http\n      .put(\n        'https://reccshoo.firebaseio.com/recipes.json',\n        recipes\n      )\n      .subscribe(response => {\n        console.log(response);\n      });\n  }\n\n  fetchRecipes() {\n    return this.http\n      .get<Recipe[]>(\n        'https://reccshoo.firebaseio.com/recipes.json'\n      )\n      .pipe(\n        map(recipes => {\n          return recipes.map(recipe => {\n            return {\n              ...recipe,\n              ingredients: recipe.ingredients ? recipe.ingredients : []\n            };\n          });\n        }),\n        tap(recipes => {\n          // this.recipeService.setRecipes(recipes);\n          this.store.dispatch(new RecipesActions.setRecipes(recipes));\n        })\n      );\n  }\n}\n","import { Directive, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[appDropdown]'\n})\nexport class DropdownDirective {\n  @HostBinding('class.open') isOpen = false;\n\n  @HostListener('click') toggleOpen() {\n    this.isOpen = !this.isOpen;\n  }\n}\n","export class Ingredient {\n  constructor(public name: string, public amount: number) {}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-spinner',\n  template:\n    '<div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>',\n  styleUrls: ['./loading-spinner.component.css']\n})\nexport class LoadingSpinnerComponent {}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appPlaceholder]'\n})\nexport class PlaceholderDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AlertComponent } from './alert/alert.component';\nimport { LoadingSpinnerComponent } from './loading-spinner/loading-spinner.component';\nimport { PlaceholderDirective } from './placeholder/placeholder.directive';\nimport { DropdownDirective } from './dropdown.directive';\nimport { LoggingService } from '../logging.service';\n\n@NgModule({\n  declarations: [\n    AlertComponent,\n    LoadingSpinnerComponent,\n    PlaceholderDirective,\n    DropdownDirective\n  ],\n  imports: [CommonModule],\n  exports: [\n    AlertComponent,\n    LoadingSpinnerComponent,\n    PlaceholderDirective,\n    DropdownDirective,\n    CommonModule\n  ],\n  entryComponents: [AlertComponent],\n  providers: [LoggingService]\n})\nexport class SharedModule {}\n","import { Action } from '@ngrx/store';\n\nimport { Ingredient } from '../../shared/ingredient.model';\n\n// export const ADD_INGREDIENT = 'ADD_INGREDIENT';\n// export const ADD_INGREDIENTS = 'ADD_INGREDIENTS';\n// export const UPDATE_INGREDIENT = 'UPDATE_INGREDIENT';\n// export const DELETE_INGREDIENT = 'DELETE_INGREDIENT';\n// export const START_EDIT = 'START_EDIT';\n// export const STOP_EDIT = 'STOP_EDIT';\n\nexport const ADD_INGREDIENT = '[Shopping List] Add Ingredient';\nexport const ADD_INGREDIENTS = '[Shopping List] Add Ingredients';\nexport const UPDATE_INGREDIENT = '[Shopping List] Update Ingredient';\nexport const DELETE_INGREDIENT = '[Shopping List] Delete Ingredient';\nexport const START_EDIT = '[Shopping List] Start Edit';\nexport const STOP_EDIT = '[Shopping List] Stop Edit';\n\nexport class AddIngredient implements Action {\n  readonly type = ADD_INGREDIENT;\n\n  constructor(public payload: Ingredient) {}\n}\n\nexport class AddIngredients implements Action {\n  readonly type = ADD_INGREDIENTS;\n\n  constructor(public payload: Ingredient[]) {}\n}\n\nexport class UpdateIngredient implements Action {\n  readonly type = UPDATE_INGREDIENT;\n\n  constructor(public payload: Ingredient ) {}\n}\n\nexport class DeleteIngredient implements Action {\n  readonly type = DELETE_INGREDIENT;\n}\n\nexport class StartEdit implements Action {\n  readonly type = START_EDIT;\n\n  constructor(public payload: number) {}\n}\n\nexport class StopEdit implements Action {\n  readonly type = STOP_EDIT;\n}\n\nexport type ShoppingListActions =\n  | AddIngredient\n  | AddIngredients\n  | UpdateIngredient\n  | DeleteIngredient\n  | StartEdit\n  | StopEdit;\n","import { Ingredient } from '../../shared/ingredient.model';\nimport * as ShoppingListActions from './shopping-list.actions';\n\nexport interface State {\n  ingredients: Ingredient[];\n  editedIngredient: Ingredient;\n  editedIngredientIndex: number;\n}\n\nconst initialState: State = {\n  ingredients: [new Ingredient('Apples', 5), new Ingredient('Tomatoes', 10)],\n  editedIngredient: null,\n  editedIngredientIndex: -1\n};\n\nexport function shoppingListReducer(\n  state: State = initialState,\n  action: ShoppingListActions.ShoppingListActions\n) {\n  switch (action.type) {\n    case ShoppingListActions.ADD_INGREDIENT:\n      return {\n        ...state,\n        ingredients: [...state.ingredients, action.payload]\n      };\n    case ShoppingListActions.ADD_INGREDIENTS:\n      return {\n        ...state,\n        ingredients: [...state.ingredients, ...action.payload]\n      };\n    case ShoppingListActions.UPDATE_INGREDIENT:\n      const ingredient = state.ingredients[state.editedIngredientIndex];\n      const updatedIngredient = {\n        ...ingredient,\n        ...action.payload\n      };\n      const updatedIngredients = [...state.ingredients];\n      updatedIngredients[state.editedIngredientIndex] = updatedIngredient;\n\n      return {\n        ...state,\n        ingredients: updatedIngredients,\n        editedIngredientIndex: -1,\n        editedIngredient: null\n      };\n    case ShoppingListActions.DELETE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: state.ingredients.filter((ig, igIndex) => {\n          return igIndex !== state.editedIngredientIndex;\n        }),\n        editedIngredientIndex: -1,\n        editedIngredient: null\n      };\n    case ShoppingListActions.START_EDIT:\n      return {\n        ...state,\n        editedIngredientIndex: action.payload,\n        editedIngredient: { ...state.ingredients[action.payload] }\n      };\n    case ShoppingListActions.STOP_EDIT:\n      return {\n        ...state,\n        editedIngredient: null,\n        editedIngredientIndex: -1\n      };\n    default:\n      return state;\n  }\n}\n","import { ActionReducerMap } from '@ngrx/store';\n\nimport * as fromShoppingList from '../shopping-list/store/shopping-list.reducer';\nimport * as fromAuth from '../auth/store/auth.reducer';\nimport * as fromRecipes from '../recipes/store/recipe.reducer';\n\nexport interface AppState {\n  shoppingList: fromShoppingList.State;\n  auth: fromAuth.State;\n  recipe : fromRecipes.State;\n}\n\nexport const appReducer: ActionReducerMap<AppState> = {\n  shoppingList: fromShoppingList.shoppingListReducer,\n  auth: fromAuth.authReducer,\n  recipe : fromRecipes.recipeReducer,\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseAPIKey: 'AIzaSyBeK10DnrUG5mR0JH47M0iyIL99aoG1ieQ'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}